{"ast":null,"code":"// src/redux/timesheetSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../services/api';\nexport const fetchProjects = createAsyncThunk('timesheet/fetchProjects', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.get('/projects');\n    return response.data;\n  } catch (error) {\n    return rejectWithValue('Failed to fetch projects. Please try again.');\n  }\n});\nexport const fetchSubprojects = createAsyncThunk('timesheet/fetchSubprojects', async (projectId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.get(`/subprojects?project_id=${projectId}`);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue('Failed to fetch subprojects. Please try again.');\n  }\n});\nexport const submitTimesheet = createAsyncThunk('timesheet/submitTimesheet', async (timesheetData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await api.post('/timesheet', timesheetData);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue('Failed to submit timesheet entry. Please try again.');\n  }\n});\nconst timesheetSlice = createSlice({\n  name: 'timesheet',\n  initialState: {\n    formData: {\n      projectId: '',\n      subprojectId: '',\n      jiraId: '',\n      taskDescription: '',\n      hoursSpent: 0,\n      comments: ''\n    },\n    projects: [],\n    subprojects: [],\n    isLoading: false,\n    error: null\n  },\n  reducers: {\n    updateFormData: (state, action) => {\n      state.formData = {\n        ...state.formData,\n        ...action.payload\n      };\n    },\n    resetForm: state => {\n      state.formData = {\n        projectId: '',\n        subprojectId: '',\n        jiraId: '',\n        taskDescription: '',\n        hoursSpent: 0,\n        comments: ''\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProjects.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(fetchProjects.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.projects = action.payload;\n    }).addCase(fetchProjects.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }).addCase(fetchSubprojects.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(fetchSubprojects.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.subprojects = action.payload;\n    }).addCase(fetchSubprojects.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }).addCase(submitTimesheet.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(submitTimesheet.fulfilled, state => {\n      state.isLoading = false;\n    }).addCase(submitTimesheet.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  updateFormData,\n  resetForm\n} = timesheetSlice.actions;\nexport default timesheetSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","fetchProjects","_","rejectWithValue","response","get","data","error","fetchSubprojects","projectId","submitTimesheet","timesheetData","post","timesheetSlice","name","initialState","formData","subprojectId","jiraId","taskDescription","hoursSpent","comments","projects","subprojects","isLoading","reducers","updateFormData","state","action","payload","resetForm","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["/Users/anusharesu/Desktop/Nani_Bitbucket/Go/Projects/timesheet-app-react/src/redux/timesheetSlice.js"],"sourcesContent":["// src/redux/timesheetSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport api from '../services/api';\n\nexport const fetchProjects = createAsyncThunk(\n  'timesheet/fetchProjects',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await api.get('/projects');\n      return response.data;\n    } catch (error) {\n      return rejectWithValue('Failed to fetch projects. Please try again.');\n    }\n  }\n);\n\nexport const fetchSubprojects = createAsyncThunk(\n  'timesheet/fetchSubprojects',\n  async (projectId, { rejectWithValue }) => {\n    try {\n      const response = await api.get(`/subprojects?project_id=${projectId}`);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue('Failed to fetch subprojects. Please try again.');\n    }\n  }\n);\n\nexport const submitTimesheet = createAsyncThunk(\n  'timesheet/submitTimesheet',\n  async (timesheetData, { rejectWithValue }) => {\n    try {\n      const response = await api.post('/timesheet', timesheetData);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue('Failed to submit timesheet entry. Please try again.');\n    }\n  }\n);\n\nconst timesheetSlice = createSlice({\n  name: 'timesheet',\n  initialState: {\n    formData: {\n      projectId: '',\n      subprojectId: '',\n      jiraId: '',\n      taskDescription: '',\n      hoursSpent: 0,\n      comments: ''\n    },\n    projects: [],\n    subprojects: [],\n    isLoading: false,\n    error: null\n  },\n  reducers: {\n    updateFormData: (state, action) => {\n      state.formData = { ...state.formData, ...action.payload };\n    },\n    resetForm: (state) => {\n      state.formData = {\n        projectId: '',\n        subprojectId: '',\n        jiraId: '',\n        taskDescription: '',\n        hoursSpent: 0,\n        comments: ''\n      };\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProjects.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchProjects.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.projects = action.payload;\n      })\n      .addCase(fetchProjects.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      .addCase(fetchSubprojects.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(fetchSubprojects.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.subprojects = action.payload;\n      })\n      .addCase(fetchSubprojects.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      })\n      .addCase(submitTimesheet.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(submitTimesheet.fulfilled, (state) => {\n        state.isLoading = false;\n      })\n      .addCase(submitTimesheet.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      });\n  }\n});\n\nexport const { updateFormData, resetForm } = timesheetSlice.actions;\nexport default timesheetSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}